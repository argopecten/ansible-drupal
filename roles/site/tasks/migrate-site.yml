---
# Migrate site specified in command line
# ansible-playbook playbooks/sites.yml --tags migrate --extra-vars "site=c1.example.com target=drupal11"

# - backup database for site
# - backup site directory
# - install new site on target platform
# - restore the files in sites directory on target platform
# - restore database for the site on target platform
# - delete site on source platform
# - update site configuration on target platform

# Check if it runs on the specified platform
- name: Check presence of platform
  ansible.builtin.assert:
    that: 
      - platforms[ sites[item.key].platform ].name == sites[item.key].platform
    fail_msg: "Defined platform for site {{ item.key }} is not present on the server."
  register: platform

- block:
    - name: Set variables for the Drupal site
      ansible.builtin.set_fact:
        drush_path: "{{ platforms[ sites[item.key].platform ].path }}{{ platforms[ sites[item.key].platform ].name }}/vendor/bin/drush"
        platform_path: "{{ platforms[ sites[item.key].platform ].path }}{{ platforms[ sites[item.key].platform ].name }}"
        platform_user: "{{ platforms[ sites[item.key].platform ].user }}"
        platform_group: "{{ platforms[ sites[item.key].platform ].group }}"
        site_name: "{{ sites[item.key].name }}"
        backup_dir: "/home/{{ platforms[ sites[item.key].platform ].user }}/backup/{{ platforms[ sites[item.key].platform ].name }}/{{ sites[item.key].name }}-{{ date }}"

  # Block ends here
  when: platform is not failed

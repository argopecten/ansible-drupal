---

# Install SSL certificates

# This task installs SSL certificates for the server using self-signed certificates and Cloudflare certificates.

# Set variables for the Drupal site
- name: Set variables for the Drupal site
  ansible.builtin.set_fact:
    site_name: "{{ sites[item.key].name }}"
    cf_zone_id: "{{ sites[item.key].cf.zone_id }}"
    cf_email: "{{ sites[item.key].cf.email }}"
    cf_api_key: "{{ sites[item.key].cf.api_key }}"
    cf_private_key: "{{ sites[item.key].cf.private_key }}"
    ssl_name: "{{ sites[item.key].name }}"

# Log the variables
- name: Log the variables
  ansible.builtin.debug:
    msg: "site_name: {{ site_name }}, cf_zone_id: {{ cf_zone_id }}, cf_email: {{ cf_email }}, cf_api_key: {{ cf_api_key }}, ssl_name: {{ ssl_name }}"

# Cleanup existing SSL certificates
- name: Clean up existing certs
  ansible.builtin.file:
    dest: "{{ cert }}"
    state: absent
  loop:
    - "/etc/ssl/certs/{{ ssl_name }}.pem"
    - "/etc/ssl/private/{{ ssl_name }}.key"
    - "/etc/ssl/certs/ssl-cert-snakeoil.pem"
    - "/etc/ssl/private/ssl-cert-snakeoil.key"
    - "/etc/ssl/certs/cloudflare.pem"
  loop_control:
    loop_var: cert
  become: true
  become_user: "{{ root_user }}"

# Setup self-signed SSL certificates for the site
- block:
    - name: Generate self-signed PEM certificate
      ansible.builtin.command: >
        openssl req -x509 -nodes -days 365 -newkey rsa:2048
        -keyout /etc/ssl/private/{{ ssl_name }}.key
        -out /etc/ssl/certs/{{ ssl_name }}.pem
        -subj "/C=US/ST=New York/L=New York/O=Example Inc./OU=IT Department/CN={{ ssl_name }}"
      args:
        creates: /etc/ssl/certs/{{ ssl_name }}.pem
    - name: Generate self-signed SSL key 
      ansible.builtin.command: >
        openssl genrsa -out /etc/ssl/private/{{ ssl_name }}.key 2048
      args:
        creates: /etc/ssl/private/{{ ssl_name }}.key

  # Block ends here
  when: cf_zone_id == 'dummy'

# Setup Cloudflare certificates for the site
# https://cfapi.centminmod.com/#origin-ca-create-certificate

- block:
    # Obtain Cloudflare origin certificate
    # curl -X GET "https://api.cloudflare.com/client/v4/certificates?zone_id=$ZONE_ID" -H "X-Auth-User-Service-Key: $SERVICE_KEY"

    - name: Get existing Cloudflare origin certificate
      ansible.builtin.uri:
        url: "https://api.cloudflare.com/client/v4/certificates?zone_id={{ cf_zone_id }}"
        method: GET
        headers:
          Content-Type: "application/json"
          Accept: "application/json"
          X-Auth-User-Service-Key: "{{ cf_api_key }}"
        status_code: 200
        return_content: true
      register: cloudflare_cert

    # Set fact with parsed json content
    - name: Set fact with parsed json content
      ansible.builtin.set_fact:
        cf_response: "{{ cloudflare_cert.content | from_json }}"

    # Log content from CF response
    - name: Log content from CF response
      debug:
        var: cf_response

    # Retrieve and log the certificate
    - name: Log Cloudflare origin certificate
      ansible.builtin.debug:
        msg: >-
          Certificate: {{
            cf_response.result[0].certificate
            if (cf_response is defined and cf_response.result | length > 0)
            else 'No certificate found'
          }}

    # Save Cloudflare origin certificate
    - name: Save Cloudflare origin certificate
      ansible.builtin.copy:
        content: "{{ cf_response.result[0].certificate }}"
        dest: /etc/ssl/certs/{{ ssl_name }}.pem
        owner: root
        group: root
        mode: '0644'
      when: cf_response.result[0].certificate is defined

    # Save Cloudflare origin private key
    - name: Save Cloudflare origin private key
      ansible.builtin.copy:
        content: "{{ cf_private_key | mandatory }}"
        dest: /etc/ssl/private/{{ ssl_name }}.key
        owner: root
        group: root
        mode: '0600'
      when: cf_private_key is defined

    # TBD: replace with Cloudflare Authenticated Origin Pulls
    # Get Cloudflare Origin CA root certificate
    - name: Get Cloudflare Origin CA root certificate
      ansible.builtin.uri:
        url: "https://developers.cloudflare.com/ssl/static/origin_ca_rsa_root.pem"
        method: GET
        return_content: true
      register: cf_ca_root_cert

    # Log content from CF response
    - name: Log content from CF response for CF root cert
      debug:
        msg: "{{ cf_ca_root_cert.content }}"
      when: cf_ca_root_cert.content is defined

    # Save Cloudflare origin root certificate
    - name: Save Cloudflare origin root certificate
      ansible.builtin.copy:
        content: "{{ cf_ca_root_cert.content }}"
        dest: /etc/ssl/certs/cloudflare.pem
        owner: root
        group: root
        mode: '0644'
      when: cf_ca_root_cert.content is defined

  # Block ends here
  when: cf_zone_id != "dummy"

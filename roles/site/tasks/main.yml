---
#
### This role is about Drupal 10/11 site management.
# 
# It does the following:
# - creates new sites if they do not exist
# - verifies configuration for existing sites
# - updates code and database for existing sites
# - deletes sites that are no longer needed
# - backs up and restores sites
# - runs cron jobs for sites (??? - not sure if this is needed)
# - migrates sites to new platforms
#

# Create site for the site name defined in command line
- block:
    - name: Create new site
      include_tasks: create-site.yml
      # with_items: "{{ sites | dict2items }}"
      loop: "{{ sites | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
  when: 
    - site is defined
    - site == sites[item.key].name
    - inventory_hostname == sites[item.key].server
  tags:
  - never 
  - install

# Verify configuration for the site defined in command line or all sites
- block:
    - name: Verify configurations for the site
      include_tasks: verify-site-configurations.yml
      # with_items: "{{ sites | dict2items }}"
      loop: "{{ sites | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
  when:
    - (site is defined and site == sites[item.key].name and inventory_hostname == sites[item.key].server) or (site is not defined and inventory_hostname == sites[item.key].server)
  tags:
  - never
  - verify
  - install

# Create login URL for the site defined in command line
# ansible-playbook playbooks/sites.yml --tags reset-password --extra-vars "site=c1.example.com"
- block:
    - name: Create login URL for the site
      include_tasks: create-login-url.yml
      # with_items: "{{ sites | dict2items }}"
      loop: "{{ sites | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
  when: 
    - site is defined
    - site == sites[item.key].name
    - inventory_hostname == sites[item.key].server
  tags:
    - never
    - reset-password

# Delete site defined in command line 
# ansible-playbook playbooks/sites.yml --tags delete --extra-vars "site=c1.example.com"
- block:
    - name: Delete site
      include_tasks: delete-site.yml
      # with_items: "{{ sites | dict2items }}"
      loop: "{{ sites | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
  when: 
    - site is defined
    - site == sites[item.key].name
    - inventory_hostname == sites[item.key].server
  tags:
  - never
  - delete

# Update site defined in command line or all sites
# ansible-playbook playbooks/sites.yml --tags update --extra-vars "site=c1.example.com"
- block:
    - name: Update site
      include_tasks: update-sites.yml
      # with_items: "{{ sites | dict2items }}"
      loop: "{{ sites | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
  when: 
    - (site is defined and site == sites[item.key].name and inventory_hostname == sites[item.key].server) 
      or 
      (site is not defined and inventory_hostname == sites[item.key].server)
  tags:
  - never
  - update

# Backup site defined in command line or all sites
# ansible-playbook playbooks/sites.yml --tags backup --extra-vars "site=c1.example.com"
- block:
    - name: Backup site
      include_tasks: backup-sites.yml
      loop: "{{ sites | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
  when: 
    - (site is defined and site == sites[item.key].name and inventory_hostname == sites[item.key].server) or (site is not defined and inventory_hostname == sites[item.key].server)
  tags:
  - never
  - backup

# Restore site defined in command line 
# ansible-playbook playbooks/sites.yml --tags restore --extra-vars "site=c1.example.com arch=250322"
- block:
    - name: Restore site
      include_tasks: restore-site.yml
      loop: "{{ sites | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
  when: 
    - site is defined
    - arch is defined
    - site == sites[item.key].name
    - inventory_hostname == sites[item.key].server
  tags:
  - never
  - restore

# Migrate site defined in command line to a new platform
# ansible-playbook playbooks/sites.yml --tags migrate --extra-vars "site=c1.example.com target=drupal11"
- block:
    - name: Migrate site
      include_tasks: migrate-site.yml
      loop: "{{ sites | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
  when: 
    - site is defined
    - target is defined
    - site == sites[item.key].name
    - inventory_hostname == sites[item.key].server
  tags:
  - never
  - migrate

# Setup certificate for the site defined in command line or all sites
# ansible-playbook playbooks/sites.yml --tags ssl --extra-vars "site=c1.example.com"
- block:
    - name: Setup SSL certificate
      include_tasks: ssl-certificates.yml
      loop: "{{ sites | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
  when:
    - (site is defined and site == sites[item.key].name and inventory_hostname == sites[item.key].server) or (site is not defined and inventory_hostname == sites[item.key].server)
  tags:
  - never
  - ssl
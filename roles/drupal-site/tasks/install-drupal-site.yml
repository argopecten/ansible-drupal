---
# Install Drupal site

# Ensure all required variables are defined
- name: Check required variables
  ansible.builtin.assert:
    that:
      - drush_path is defined
      - drupal_path is defined
      - drupal_site_name is defined
      - drupal_site_user is defined
      - drupal_site_pass is defined
      - drupal_db_backend is defined
      - drupal_db_user is defined
      - drupal_db_password is defined
      - drupal_db_host is defined
      - drupal_db_name is defined
      - drupal_user is defined
    fail_msg: "One or more required variables are not defined."

# Install Drupal core with drush
- name: Install Drupal core with drush.
  ansible.builtin.command: >
    {{ drush_path }} --root={{ drupal_path }} site-install {{ drupal_install_profile | default('standard') }} -y
    --site-name="{{ drupal_site_name }}"
    --sites-subdir="{{ drupal_site_name }}"
    --account-name="{{ drupal_site_user }}"
    --account-pass={{ drupal_site_pass }}
    --db-url={{ drupal_db_backend }}://{{ drupal_db_user }}:{{ drupal_db_password }}@{{ drupal_db_host }}/{{ drupal_db_name }}
    {{ drupal_site_install_extra_args | join(" ") }}
  args:
    chdir: "{{ drupal_path }}"
  notify: Set permissions for site directory
  # when: "'Drupal bootstrap' not in drupal_site_installed.stdout"
  become: true
  become_user: "{{ drupal_user }}"

# Install Drupal modules with drush
- name: Install Drupal modules with drush.
  ansible.builtin.command: >
    {{ drush_path }} pm-enable -y {{ drupal_enable_modules | join(" ") }} --uri={{ drupal_site_name }}
    --root={{ drupal_path }}
  args:
    chdir: "{{ drupal_path }}"
  # when: ('Drupal bootstrap' not in drupal_site_installed.stdout) and drupal_enable_modules
  become: false
